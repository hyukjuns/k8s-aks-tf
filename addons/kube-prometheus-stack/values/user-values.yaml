# -------------------Global-------------------
# 프로메테우스 스택의 레이블 설정 (Key: app)
nameOverride: "kube-prometheus-stack-hyukjun"

# 네임스페이스 Label 설정
commonLabels:
  mgmt: hyukjun

global:
  # 프라이빗 레지스트리 사용시 활용
  imageRegistry: ""
  imagePullSecrets: []

# -------------------Global-Disable-------------------
# ETCD / Controller Manager / Scheduler -> Control Plane Component (AKS)
# Kube-Proxy
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
# -------------------Alertmanager-------------------
alertmanager:
  # PDB 설정
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    maxUnavailable: ""
  # 서비스 설정
  service:
    port: 9093
    targetPort: 9093
    type: LoadBalancer
  # 파드 스펙 설정
  alertmanagerSpec:
    # 파드개수
    replicas: 1

    # 리소스 설정 - Guaranteed
    resources:
      limits:
        memory: 256Mi
      requests:
        memory: 256Mi


# -------------------Grafana-------------------
grafana:
  # 대시보드 타임존
  defaultDashboardsTimezone: kst
  # 어드민 암호
  adminPassword: admin
  service:
    type: LoadBalancer
    port: 3000
    portName: http-web
    targetPort: 3000

# -------------------PrometheusOperator-------------------
prometheusOperator:
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

# -------------------Promtetheus-------------------
prometheus:
  # 서비스 설정
  service:
    port: 9090
    targetPort: 9090
    type: LoadBalancer
  # PDB 설정
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    maxUnavailable: ""
  # 파드 스펙 설정
  prometheusSpec:
    # 서비스모니터 설정 -> 다른 네임스페이스에 있는 Service Monitor 사용을 위해 설정
    # By default, Prometheus only discovers PodMonitors within its own namespace.
    # This should be disabled by setting podMonitorSelectorNilUsesHelmValues to false
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    
    # 메트릭 스크랩
    # scrapeTimeout > scrapeInterval
    scrapeInterval: "15s"
    # scrapeTimeout: "30s"
    # evaluationInterval: "16s"

    # 토폴로지 & 스케쥴링 옵션
    tolerations: []
    topologySpreadConstraints: []
    nodeSelector: {}
    podAntiAffinity: ""
    podAntiAffinityTopologyKey: kubernetes.io/hostname
    affinity: {}

    # 메트릭 보존 기간
    retention:  7d 
    
    # 메트릭 최대 사이즈
    retentionSize: "5GiB"

    # 파드 개수
    replicas: 1

    # 리소스 설정 - Guaranteed
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 512Mi
    
    # 스토리지 설정
    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: azuredisk-ssd-lrs # 미리 단들어둔 스토리지클래스
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi