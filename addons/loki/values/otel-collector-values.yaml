image:
  repository: "otel/opentelemetry-collector-k8s"
mode: daemonset  
presets: 
  # enables the k8sattributesprocessor and adds it to the traces, metrics, and logs pipelines 
  kubernetesAttributes: 
    enabled: false 
  # enables the kubeletstatsreceiver and adds it to the metrics pipelines 
  kubeletMetrics: 
    enabled: false 
  # Enables the filelogreceiver and adds it to the logs pipelines 
  logsCollection: 
    enabled: false 
## The chart only includes the loggingexporter by default 
## If you want to send your data somewhere you need to 
## configure an exporter, such as the otlpexporter 
config: 
  exporters:  
    otlphttp: 
      endpoint: "http://loki-write.loki.svc.cluster.local:3100/loki/api/v1/push" 
      tls: 
        insecure: true 

  processors: 
    resource: 
      attributes: 
        - action: insert 
          key: language 
          from_attribute: telemetry.sdk.language 
        - action: insert 
          key: service_name 
          from_attribute: service.name 
        - action: insert 
          key: service_namespace 
          from_attribute: service.namespace 
        - action: insert 
          key: service_version 
          value: 1.000 
        - action: insert 
          key: deployment_environment 
          value: production 
        - action: insert 
          key: loki.resource.labels 
          value: language,service_name,service_namespace,service_version,deployment_environment           
  service: 
    telemetry: 
      logs: 
        level: "debug" 
    pipelines: 
     logs: 
       exporters: [ loki, debug ] 
       processors: [batch, resource] 
       receivers: [ otlp ] 
service: 
  # Enable the creation of a Service. 
  # By default, it's enabled on mode != daemonset. 
  # However, to enable it on mode = daemonset, its creation must be explicitly enabled 
  enabled: true 
 
  type: LoadBalancer 
  loadBalancerIP: ""  
  annotations:    
    service.beta.kubernetes.io/azure-load-balancer-internal: "true" 